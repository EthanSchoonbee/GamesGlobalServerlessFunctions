AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to configure contact form function'

Parameters:
  FunctionName:
    Type: String

Resources:
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'LambdaExecution'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: "*"
              - Effect: 'Allow'
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:Query'
                  - 'dynamodb:Scan'
                Resource: !Sub
                  - '${logEventTableArn}*'
                  - logEventTableArn: !ImportValue LogEventTableArn
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Ref FunctionName
      Role: !GetAtt LambdaExecutionRole.Arn
      PackageType: 'Image'
      Code:
        ImageUri: !Sub
          - "${ecrRepositoryUri}:latest"
          - ecrRepositoryUri: !ImportValue LogReaderLambdaECRRepositoryUri
      Timeout: 300
      MemorySize: 128
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupId
        SubnetIds:
          - !ImportValue PrivateSubnetAId
          - !ImportValue PrivateSubnetBId

  LambdaFunctionUrl:
    Type: 'AWS::Lambda::Url'
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref LambdaFunction

Outputs:
  LambdaFunctionName:
    Description: 'The name of the Lambda function'
    Value: !Ref LambdaFunction
    Export:
      Name: 'LogReaderLambdaFunctionName'

  LambdaFunctionArn:
    Description: 'The ARN of the Lambda function'
    Value: !GetAtt LambdaFunction.Arn
    Export:
      Name: 'LogReaderLambdaFunctionArn'

  LambdaFunctionUrl:
    Description: 'The URL of the Lambda function'
    Value: !Ref LambdaFunctionUrl
    Export:
      Name: 'LogReaderLambdaFunctionUrl'